// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.co.uk/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Registered to: NineTailedFox
// Company      : N/A
// Licence Type : Trial - for non-commercial trial use only
// Licences     : 1
// Valid until  : 03 JAN 2020
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Connection String Name: "AuditTrailDbContext"
//     Connection String:      "Data Source=NINE-TAILED-FOX;Initial Catalog=EntityFrameworkPlus;User Id=sa; password=**zapped**;"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Developer Edition (64-bit)
// Database Engine Edition: Enterprise
// Database Version       : 14.0.1000.169

// <auto-generated>
// ReSharper disable CheckNamespace
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable NotAccessedVariable
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantCast
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// ReSharper disable UsePatternMatching
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;

namespace AuditTrail_Console
{
    // HistoryTrackingValueAudit
    public class HistoryTrackingValueAuditConfiguration : EntityTypeConfiguration<HistoryTrackingValueAudit>
    {
        public HistoryTrackingValueAuditConfiguration()
            : this("dbo")
        {
        }

        public HistoryTrackingValueAuditConfiguration(string schema)
        {
            ToTable("HistoryTrackingValueAudit", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.ColumnName).HasColumnName(@"ColumnName").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.OldValue).HasColumnName(@"OldValue").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.NewValue).HasColumnName(@"NewValue").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.Action).HasColumnName(@"Action").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.InsertedById).HasColumnName(@"InsertedById").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.InsertedAt).HasColumnName(@"InsertedAt").HasColumnType("datetime").IsRequired();
            Property(x => x.UpdatedById).HasColumnName(@"UpdatedById").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.UpdatedAt).HasColumnName(@"UpdatedAt").HasColumnType("datetime").IsRequired();
            Property(x => x.HistoryTrackingId).HasColumnName(@"HistoryTrackingId").HasColumnType("uniqueidentifier").IsRequired();

            // Foreign keys
            HasRequired(a => a.HistoryTrackingAudit).WithMany(b => b.HistoryTrackingValueAudits).HasForeignKey(c => c.HistoryTrackingId).WillCascadeOnDelete(false); // FK__HistoryTr__Histo__403A8C7D
        }
    }

}
// </auto-generated>


